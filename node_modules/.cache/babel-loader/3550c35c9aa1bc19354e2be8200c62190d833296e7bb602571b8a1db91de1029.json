{"ast":null,"code":"var _jsxFileName = \"/Users/shwetamate/Desktop/my-retro-websites/src/Games.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Games.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst triviaQuestions = [{\n  question: \"What is the name of Ross's second wife?\",\n  options: [\"Carol\", \"Emily\", \"Rachel\", \"Susan\"],\n  answer: \"Emily\"\n}, {\n  question: \"What is the name of Joey's stuffed penguin?\",\n  options: [\"Hugsy\", \"Waddles\", \"Snowy\", \"Fluffy\"],\n  answer: \"Hugsy\"\n}, {\n  question: \"Which character famously said, 'We were on a break!'?\",\n  options: [\"Monica\", \"Phoebe\", \"Ross\", \"Chandler\"],\n  answer: \"Ross\"\n}, {\n  question: \"What was the name of Rachel's hairless cat?\",\n  options: [\"Whiskers\", \"Baldy\", \"Mrs. Whiskerson\", \"Hairless\"],\n  answer: \"Mrs. Whiskerson\"\n}, {\n  question: \"What is Chandler's middle name?\",\n  options: [\"Muriel\", \"Matthew\", \"Marcel\", \"Michael\"],\n  answer: \"Muriel\"\n}];\nconst Games = () => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [showScore, setShowScore] = useState(false);\n  const handleOptionClick = option => {\n    setSelectedOption(option);\n  };\n  const handleNextQuestion = () => {\n    if (selectedOption === triviaQuestions[currentQuestionIndex].answer) {\n      setScore(score + 1);\n    }\n    if (currentQuestionIndex < triviaQuestions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setSelectedOption(\"\");\n    } else {\n      setShowScore(true);\n    }\n  };\n  const handleRestart = () => {\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setSelectedOption(\"\");\n    setShowScore(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"games-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"retro-title\",\n      children: \"\\uD83C\\uDFAE Friends Trivia Game!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"score-title\",\n        children: [\"Your Score: \", score, \" / \", triviaQuestions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRestart,\n        className: \"game-button restart\",\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"question-title\",\n        children: triviaQuestions[currentQuestionIndex].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-container\",\n        children: triviaQuestions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOptionClick(option),\n          className: `option-button ${selectedOption === option ? \"selected\" : \"\"}`,\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextQuestion,\n        className: \"game-button next\",\n        disabled: !selectedOption,\n        children: currentQuestionIndex < triviaQuestions.length - 1 ? \"Next Question\" : \"Show Score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Games, \"CVrflF83j7dh2GclywUlLOVHZB8=\");\n_c = Games;\nexport default Games;\nvar _c;\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","triviaQuestions","question","options","answer","Games","_s","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","selectedOption","setSelectedOption","showScore","setShowScore","handleOptionClick","option","handleNextQuestion","length","handleRestart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","disabled","_c","$RefreshReg$"],"sources":["/Users/shwetamate/Desktop/my-retro-websites/src/Games.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Games.css';\n\nconst triviaQuestions = [\n  {\n    question: \"What is the name of Ross's second wife?\",\n    options: [\"Carol\", \"Emily\", \"Rachel\", \"Susan\"],\n    answer: \"Emily\",\n  },\n  {\n    question: \"What is the name of Joey's stuffed penguin?\",\n    options: [\"Hugsy\", \"Waddles\", \"Snowy\", \"Fluffy\"],\n    answer: \"Hugsy\",\n  },\n  {\n    question: \"Which character famously said, 'We were on a break!'?\",\n    options: [\"Monica\", \"Phoebe\", \"Ross\", \"Chandler\"],\n    answer: \"Ross\",\n  },\n  {\n    question: \"What was the name of Rachel's hairless cat?\",\n    options: [\"Whiskers\", \"Baldy\", \"Mrs. Whiskerson\", \"Hairless\"],\n    answer: \"Mrs. Whiskerson\",\n  },\n  {\n    question: \"What is Chandler's middle name?\",\n    options: [\"Muriel\", \"Matthew\", \"Marcel\", \"Michael\"],\n    answer: \"Muriel\",\n  },\n];\n\nconst Games = () => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [showScore, setShowScore] = useState(false);\n\n  const handleOptionClick = (option) => {\n    setSelectedOption(option);\n  };\n\n  const handleNextQuestion = () => {\n    if (selectedOption === triviaQuestions[currentQuestionIndex].answer) {\n      setScore(score + 1);\n    }\n\n    if (currentQuestionIndex < triviaQuestions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setSelectedOption(\"\");\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  const handleRestart = () => {\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setSelectedOption(\"\");\n    setShowScore(false);\n  };\n\n  return (\n    <div className=\"games-container\">\n      <h1 className=\"retro-title\">ðŸŽ® Friends Trivia Game!</h1>\n\n      {showScore ? (\n        <div className=\"score-area\">\n          <h2 className=\"score-title\">Your Score: {score} / {triviaQuestions.length}</h2>\n          <button onClick={handleRestart} className=\"game-button restart\">\n            Play Again\n          </button>\n        </div>\n      ) : (\n        <div className=\"question-area\">\n          <h2 className=\"question-title\">\n            {triviaQuestions[currentQuestionIndex].question}\n          </h2>\n          <div className=\"options-container\">\n            {triviaQuestions[currentQuestionIndex].options.map((option, index) => (\n              <button\n                key={index}\n                onClick={() => handleOptionClick(option)}\n                className={`option-button ${\n                  selectedOption === option ? \"selected\" : \"\"\n                }`}\n              >\n                {option}\n              </button>\n            ))}\n          </div>\n          <button\n            onClick={handleNextQuestion}\n            className=\"game-button next\"\n            disabled={!selectedOption}\n          >\n            {currentQuestionIndex < triviaQuestions.length - 1\n              ? \"Next Question\"\n              : \"Show Score\"}\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Games;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,eAAe,GAAG,CACtB;EACEC,QAAQ,EAAE,yCAAyC;EACnDC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC;EAC9CC,MAAM,EAAE;AACV,CAAC,EACD;EACEF,QAAQ,EAAE,6CAA6C;EACvDC,OAAO,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,CAAC;EAChDC,MAAM,EAAE;AACV,CAAC,EACD;EACEF,QAAQ,EAAE,uDAAuD;EACjEC,OAAO,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,CAAC;EACjDC,MAAM,EAAE;AACV,CAAC,EACD;EACEF,QAAQ,EAAE,6CAA6C;EACvDC,OAAO,EAAE,CAAC,UAAU,EAAE,OAAO,EAAE,iBAAiB,EAAE,UAAU,CAAC;EAC7DC,MAAM,EAAE;AACV,CAAC,EACD;EACEF,QAAQ,EAAE,iCAAiC;EAC3CC,OAAO,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,CAAC;EACnDC,MAAM,EAAE;AACV,CAAC,CACF;AAED,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACnE,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMiB,iBAAiB,GAAIC,MAAM,IAAK;IACpCJ,iBAAiB,CAACI,MAAM,CAAC;EAC3B,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIN,cAAc,KAAKV,eAAe,CAACM,oBAAoB,CAAC,CAACH,MAAM,EAAE;MACnEM,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACrB;IAEA,IAAIF,oBAAoB,GAAGN,eAAe,CAACiB,MAAM,GAAG,CAAC,EAAE;MACrDV,uBAAuB,CAACD,oBAAoB,GAAG,CAAC,CAAC;MACjDK,iBAAiB,CAAC,EAAE,CAAC;IACvB,CAAC,MAAM;MACLE,YAAY,CAAC,IAAI,CAAC;IACpB;EACF,CAAC;EAED,MAAMK,aAAa,GAAGA,CAAA,KAAM;IAC1BX,uBAAuB,CAAC,CAAC,CAAC;IAC1BE,QAAQ,CAAC,CAAC,CAAC;IACXE,iBAAiB,CAAC,EAAE,CAAC;IACrBE,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACEd,OAAA;IAAKoB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BrB,OAAA;MAAIoB,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEvDZ,SAAS,gBACRb,OAAA;MAAKoB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBrB,OAAA;QAAIoB,SAAS,EAAC,aAAa;QAAAC,QAAA,GAAC,cAAY,EAACZ,KAAK,EAAC,KAAG,EAACR,eAAe,CAACiB,MAAM;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC/EzB,OAAA;QAAQ0B,OAAO,EAAEP,aAAc;QAACC,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EAAC;MAEhE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,gBAENzB,OAAA;MAAKoB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BrB,OAAA;QAAIoB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC3BpB,eAAe,CAACM,oBAAoB,CAAC,CAACL;MAAQ;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACLzB,OAAA;QAAKoB,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAC/BpB,eAAe,CAACM,oBAAoB,CAAC,CAACJ,OAAO,CAACwB,GAAG,CAAC,CAACX,MAAM,EAAEY,KAAK,kBAC/D5B,OAAA;UAEE0B,OAAO,EAAEA,CAAA,KAAMX,iBAAiB,CAACC,MAAM,CAAE;UACzCI,SAAS,EAAE,iBACTT,cAAc,KAAKK,MAAM,GAAG,UAAU,GAAG,EAAE,EAC1C;UAAAK,QAAA,EAEFL;QAAM,GANFY,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOJ,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNzB,OAAA;QACE0B,OAAO,EAAET,kBAAmB;QAC5BG,SAAS,EAAC,kBAAkB;QAC5BS,QAAQ,EAAE,CAAClB,cAAe;QAAAU,QAAA,EAEzBd,oBAAoB,GAAGN,eAAe,CAACiB,MAAM,GAAG,CAAC,GAC9C,eAAe,GACf;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnB,EAAA,CAxEID,KAAK;AAAAyB,EAAA,GAALzB,KAAK;AA0EX,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}